
// Generated by https://quicktype.io

import { AxiosError } from 'axios';
import { tesloApi } from '../api/user'; 
export interface LoginResponse {
  id:       string;
  email:    string;
  name: string;
  isActive: boolean;
  roles:    string[];
  token:    string;
}


export class AuthService {


  static login = async( email: string, password: string):Promise<LoginResponse> => {

    try {
      const { data } = await tesloApi.post<LoginResponse>('/auth/login', { email, password });
      console.log(data);

      return data;

    } catch (error) {
      if ( error instanceof AxiosError ) {
        console.log(error.response?.data);
        throw new Error(error.response?.data);
      }

      console.log(error);
      throw new Error('Unable to login')
    }
  }

  static register = async(name: string, email: string, password: string):Promise<LoginResponse> => {

    try {
      const { data } = await tesloApi.post<LoginResponse>('/auth/new', { name, email, password });
      console.log(data);
      return data;
    } catch (error) {
      if ( error instanceof AxiosError ) {
        console.log(error.response?.data);
        throw new Error(error.response?.data);
      }
      console.log(error);
      throw new Error('No se pudo registrar el usuario')
    }
  }


  static checkStatus = async():Promise<LoginResponse> => {


    try {
      const { data } = await tesloApi.get<LoginResponse>('/auth/check-status');

      return data;

    } catch (error) {
      console.log(error);
      throw new Error('UnAuthorized');
    }
  }


}

